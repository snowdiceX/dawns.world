package ${package_name}.gen.controller;

import ${package_name}.common.base.BaseRestController;
import ${package_name}.common.web.JsonResult;
import ${package_name}.gen.dao.model.${model};
import ${package_name}.gen.dao.model.${model}Example;
import ${package_name}.gen.service.${model}Service;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import javax.servlet.http.HttpServletRequest;
import java.util.List;

@Controller
@RequestMapping("/${model_low}")
@Api(value = "${model} api", description = "${model} api",tags = {"${model}"})
public class ${model}RestController extends BaseRestController{
    @Autowired
    private ${model}Service ${model_first_low}Service;

    @ApiOperation(value="新增${model}",tags = {"${model}"})
    @RequestMapping(value = "", method = RequestMethod.POST)
    public JsonResult<Integer> add(HttpServletRequest request, @RequestBody ${model} ${model_first_low}) {
        return new JsonResult<>(${model_first_low}Service.insert(${model_first_low}));
    }

    @ApiOperation(value="根据id更新${model}",tags = {"${model}"})
    @RequestMapping(value = "", method = RequestMethod.PUT)
    public JsonResult<Integer> update(HttpServletRequest request, @RequestBody ${model} ${model_first_low}) {
        return new JsonResult<>(${model_first_low}Service.updateByPrimaryKey(${model_first_low}));
    }

    @ApiOperation(value="根据id查询${model}",tags = {"${model}"})
    @RequestMapping(value = "/{${id}}", method = RequestMethod.GET)
    public JsonResult<${model}> get(HttpServletRequest request, @PathVariable("${id}") Integer ${id}) {
        ${model} ${model_first_low}=${model_first_low}Service.selectByPrimaryKey(${id});
        if(${model_first_low}!=null){
            return new JsonResult<>(${model_first_low});
        }else{
            return new JsonResult<>(HttpStatus.NOT_FOUND);
        }
    }

    @ApiOperation(value="根据id删除${model}",tags = {"${model}"})
    @RequestMapping(value = "/{${id}}", method = RequestMethod.DELETE)
    public JsonResult<Integer> delete(HttpServletRequest request, @PathVariable("${id}") Integer ${id}) {
        return new JsonResult<>(${model_first_low}Service.deleteByPrimaryKey(${id}));
    }

    @ApiOperation(value="分页查询${model}",tags = {"${model}"})
    @RequestMapping(value = "", method = RequestMethod.GET)
    public JsonResult<List<${model}>> page(HttpServletRequest request,
                                            @RequestParam(value = "pageNum") Integer pageNum,
                                            @RequestParam(value = "pageSize") Integer pageSize) {
        ${model}Example ${model_first_low}Example=new ${model}Example();
        ${model_first_low}Example.setOrderByClause("${id}");
        return new JsonResult<>(${model_first_low}Service.selectByExampleForStartPage(${model_first_low}Example, pageNum,pageSize));
    }
}
