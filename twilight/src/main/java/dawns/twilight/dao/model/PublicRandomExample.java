package dawns.twilight.dao.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class PublicRandomExample {
    /**
     * public_random
     */
    protected String orderByClause;

    /**
     * public_random
     */
    protected boolean distinct;

    /**
     * public_random
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public_random
     *
     * @mbg.generated Thu Feb 28 20:26:08 CST 2019
     */
    public PublicRandomExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public_random
     *
     * @mbg.generated Thu Feb 28 20:26:08 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public_random
     *
     * @mbg.generated Thu Feb 28 20:26:08 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public_random
     *
     * @mbg.generated Thu Feb 28 20:26:08 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public_random
     *
     * @mbg.generated Thu Feb 28 20:26:08 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public_random
     *
     * @mbg.generated Thu Feb 28 20:26:08 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public_random
     *
     * @mbg.generated Thu Feb 28 20:26:08 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public_random
     *
     * @mbg.generated Thu Feb 28 20:26:08 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public_random
     *
     * @mbg.generated Thu Feb 28 20:26:08 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public_random
     *
     * @mbg.generated Thu Feb 28 20:26:08 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public_random
     *
     * @mbg.generated Thu Feb 28 20:26:08 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public_random
     *
     * @mbg.generated Thu Feb 28 20:26:08 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andGamingSeqIsNull() {
            addCriterion("gaming_seq is null");
            return (Criteria) this;
        }

        public Criteria andGamingSeqIsNotNull() {
            addCriterion("gaming_seq is not null");
            return (Criteria) this;
        }

        public Criteria andGamingSeqEqualTo(String value) {
            addCriterion("gaming_seq =", value, "gamingSeq");
            return (Criteria) this;
        }

        public Criteria andGamingSeqNotEqualTo(String value) {
            addCriterion("gaming_seq <>", value, "gamingSeq");
            return (Criteria) this;
        }

        public Criteria andGamingSeqGreaterThan(String value) {
            addCriterion("gaming_seq >", value, "gamingSeq");
            return (Criteria) this;
        }

        public Criteria andGamingSeqGreaterThanOrEqualTo(String value) {
            addCriterion("gaming_seq >=", value, "gamingSeq");
            return (Criteria) this;
        }

        public Criteria andGamingSeqLessThan(String value) {
            addCriterion("gaming_seq <", value, "gamingSeq");
            return (Criteria) this;
        }

        public Criteria andGamingSeqLessThanOrEqualTo(String value) {
            addCriterion("gaming_seq <=", value, "gamingSeq");
            return (Criteria) this;
        }

        public Criteria andGamingSeqLike(String value) {
            addCriterion("gaming_seq like", value, "gamingSeq");
            return (Criteria) this;
        }

        public Criteria andGamingSeqNotLike(String value) {
            addCriterion("gaming_seq not like", value, "gamingSeq");
            return (Criteria) this;
        }

        public Criteria andGamingSeqIn(List<String> values) {
            addCriterion("gaming_seq in", values, "gamingSeq");
            return (Criteria) this;
        }

        public Criteria andGamingSeqNotIn(List<String> values) {
            addCriterion("gaming_seq not in", values, "gamingSeq");
            return (Criteria) this;
        }

        public Criteria andGamingSeqBetween(String value1, String value2) {
            addCriterion("gaming_seq between", value1, value2, "gamingSeq");
            return (Criteria) this;
        }

        public Criteria andGamingSeqNotBetween(String value1, String value2) {
            addCriterion("gaming_seq not between", value1, value2, "gamingSeq");
            return (Criteria) this;
        }

        public Criteria andGamingRoundIsNull() {
            addCriterion("gaming_round is null");
            return (Criteria) this;
        }

        public Criteria andGamingRoundIsNotNull() {
            addCriterion("gaming_round is not null");
            return (Criteria) this;
        }

        public Criteria andGamingRoundEqualTo(String value) {
            addCriterion("gaming_round =", value, "gamingRound");
            return (Criteria) this;
        }

        public Criteria andGamingRoundNotEqualTo(String value) {
            addCriterion("gaming_round <>", value, "gamingRound");
            return (Criteria) this;
        }

        public Criteria andGamingRoundGreaterThan(String value) {
            addCriterion("gaming_round >", value, "gamingRound");
            return (Criteria) this;
        }

        public Criteria andGamingRoundGreaterThanOrEqualTo(String value) {
            addCriterion("gaming_round >=", value, "gamingRound");
            return (Criteria) this;
        }

        public Criteria andGamingRoundLessThan(String value) {
            addCriterion("gaming_round <", value, "gamingRound");
            return (Criteria) this;
        }

        public Criteria andGamingRoundLessThanOrEqualTo(String value) {
            addCriterion("gaming_round <=", value, "gamingRound");
            return (Criteria) this;
        }

        public Criteria andGamingRoundLike(String value) {
            addCriterion("gaming_round like", value, "gamingRound");
            return (Criteria) this;
        }

        public Criteria andGamingRoundNotLike(String value) {
            addCriterion("gaming_round not like", value, "gamingRound");
            return (Criteria) this;
        }

        public Criteria andGamingRoundIn(List<String> values) {
            addCriterion("gaming_round in", values, "gamingRound");
            return (Criteria) this;
        }

        public Criteria andGamingRoundNotIn(List<String> values) {
            addCriterion("gaming_round not in", values, "gamingRound");
            return (Criteria) this;
        }

        public Criteria andGamingRoundBetween(String value1, String value2) {
            addCriterion("gaming_round between", value1, value2, "gamingRound");
            return (Criteria) this;
        }

        public Criteria andGamingRoundNotBetween(String value1, String value2) {
            addCriterion("gaming_round not between", value1, value2, "gamingRound");
            return (Criteria) this;
        }

        public Criteria andPublicInputIsNull() {
            addCriterion("public_input is null");
            return (Criteria) this;
        }

        public Criteria andPublicInputIsNotNull() {
            addCriterion("public_input is not null");
            return (Criteria) this;
        }

        public Criteria andPublicInputEqualTo(String value) {
            addCriterion("public_input =", value, "publicInput");
            return (Criteria) this;
        }

        public Criteria andPublicInputNotEqualTo(String value) {
            addCriterion("public_input <>", value, "publicInput");
            return (Criteria) this;
        }

        public Criteria andPublicInputGreaterThan(String value) {
            addCriterion("public_input >", value, "publicInput");
            return (Criteria) this;
        }

        public Criteria andPublicInputGreaterThanOrEqualTo(String value) {
            addCriterion("public_input >=", value, "publicInput");
            return (Criteria) this;
        }

        public Criteria andPublicInputLessThan(String value) {
            addCriterion("public_input <", value, "publicInput");
            return (Criteria) this;
        }

        public Criteria andPublicInputLessThanOrEqualTo(String value) {
            addCriterion("public_input <=", value, "publicInput");
            return (Criteria) this;
        }

        public Criteria andPublicInputLike(String value) {
            addCriterion("public_input like", value, "publicInput");
            return (Criteria) this;
        }

        public Criteria andPublicInputNotLike(String value) {
            addCriterion("public_input not like", value, "publicInput");
            return (Criteria) this;
        }

        public Criteria andPublicInputIn(List<String> values) {
            addCriterion("public_input in", values, "publicInput");
            return (Criteria) this;
        }

        public Criteria andPublicInputNotIn(List<String> values) {
            addCriterion("public_input not in", values, "publicInput");
            return (Criteria) this;
        }

        public Criteria andPublicInputBetween(String value1, String value2) {
            addCriterion("public_input between", value1, value2, "publicInput");
            return (Criteria) this;
        }

        public Criteria andPublicInputNotBetween(String value1, String value2) {
            addCriterion("public_input not between", value1, value2, "publicInput");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNull() {
            addCriterion("createtime is null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNotNull() {
            addCriterion("createtime is not null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeEqualTo(Date value) {
            addCriterion("createtime =", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotEqualTo(Date value) {
            addCriterion("createtime <>", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThan(Date value) {
            addCriterion("createtime >", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThanOrEqualTo(Date value) {
            addCriterion("createtime >=", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThan(Date value) {
            addCriterion("createtime <", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThanOrEqualTo(Date value) {
            addCriterion("createtime <=", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIn(List<Date> values) {
            addCriterion("createtime in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotIn(List<Date> values) {
            addCriterion("createtime not in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeBetween(Date value1, Date value2) {
            addCriterion("createtime between", value1, value2, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotBetween(Date value1, Date value2) {
            addCriterion("createtime not between", value1, value2, "createtime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public_random
     *
     * @mbg.generated do_not_delete_during_merge Thu Feb 28 20:26:08 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public_random
     *
     * @mbg.generated Thu Feb 28 20:26:08 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}